#!/bin/bash

if [ "$EUID" -ne 0 ]; then
   show "This script must be run as root"
   exit 1
fi

show() {
    echo
    echo "***"
    echo "*** $@"
    echo "***"
    echo
}

show "Updating Package Lists..."
apt update
show "Done."
show "Upgrading Existing Packages..."
apt upgrade -y
show "Done."

show "Installing Debian Packages..."

pkg_list=(
    aptitude
    build-essential
    cmake
    curl
    ddd
    docker.io
    dos2unix
    exuberant-ctags
    fonts-dseg
    gawk
    ghc
    graphviz
    htop
    indent
    libssl-dev
    nasm
    net-tools
    ninja-build
    openjdk-8-jdk
    openjdk-8-jdk-headless
    openssh-server
    python3-pip
    python-pip
    tcl
    tcl-dev
    tk8.6-dev
    tree
    uuid
    uuid-dev
    valac
    vim
    virtualenv
)

apt install ${pkg_list[@]} -y
show "Done."

show "Setting up Docker..."
show "Adding user '$(logname)' to docker group..."
if groups $(logname) | grep 'docker'; then
    show "User '$(logname)' is already a member of the docker group. Skipping!"
else
    usermod -a -G docker $(logname)
fi
show "Done."
show "Restarting Docker"
systemctl daemon-reload
systemctl restart docker.service
show "Done."
show "Sanity checking docker via docker.io..."
docker run hello-world || { 
	show "ERROR! Docker is misconfigured. Please contact a human for help."
	exit 1
	}
show "Done."

show "Installing default vimrc..."
if [ -e ~/.vimrc ]; then 
	show 'Already installed. Skipping...'
else
	cat > ~/.vimrc <<'EOF'
set background=dark
set nocompatible        " use vim extensions
" Bells
set visualbell t_vb=    " turn off error beep/flash
set novisualbell        " turn off visual bell
" Editing info
set number              "[same as nu] show line numbers
set ruler               "[same as ru] show cursor position
set showmode            "[same as smd] show when in insert mode
" Search
set hlsearch            " highlight searches
"set incsearch           " do incremental searching
" Auxilary files
set nobackup            " do not keep a backup file (ending in ~)
set noswapfile          " do not write a swap file
" Smart editing
set showmatch           "[same as sm] highlight matching (), {}, etc.
"set nowrap              " do not wrap lines
" Tabs and Indenting
set autoindent          "[same as ai] always set autoindenting on
set shiftwidth=4        "[same as sw] number of spaces to (auto)indent
set tabstop=4           "[same as ts] number of spaces per tab
set expandtab           "[same as et] use spaces instead of a tab
set softtabstop=4       "[same as sts] number of spaces to use instead of a tab
set smarttab            "[same as sta] <BS> deletes shiftwidth spaces from the start of a line
" Syntax highlighting
syntax enable 
autocmd FileType make setlocal noexpandtab
set tags=./tags,tags;
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
noremap <F5> :set list!<CR>
noremap <F6> :set number!<CR>
noremap <F7> :setr paste!<CR>' > ~/.vimrc
EOF
fi

show "Installing Python3 pacakges..."
pip3 install meson conan
show "Done."

echo "PS1='\w$ '" >> ~/.bashrc

echo "Log out and back in or source '~/.bashrc'"
